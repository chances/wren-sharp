<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <AssemblyVersion>0.4.0</AssemblyVersion>
  </PropertyGroup>

  <PropertyGroup>
    <Title>WrenSharp</Title>
    <PackageId>WrenSharp</PackageId>
    <Version>0.4.0</Version>
    <Description>Cross-platform bindings to the Wren scripting language.</Description>
    <PackageDescription>Cross-platform bindings to the Wren scripting language.</PackageDescription>
    <Authors>Chance Snow</Authors>
    <Company>Chance Snow</Company>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Copyright>Â© Chance Snow. All rights reserved.</Copyright>
    <PackageIcon>wren-logo.png</PackageIcon>
    <PackageReadmeFile>../README.md</PackageReadmeFile>
    <PackageTags>scripting;ios;android;linux;windows;uwp;macos;cross-platform;wren</PackageTags>
    <PackageReleaseNotes>Please visit https://github.com/chances/wren-sharp/releases to view the release notes.</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/chances/wren-sharp</RepositoryUrl>
  </PropertyGroup>

  <Target Name="InitWrenGitSubmodule" AfterTargets="BeforeBuild">
    <!-- <Exec Command="ls" WorkingDirectory="$(SolutionDir)" Condition="'$(OS)' != 'Windows_NT'" /> -->
    <!-- <Exec Command="dir" WorkingDirectory="$(SolutionDir)" Condition="'$(OS)' == 'Windows_NT'" /> -->
    <Exec Command="git submodule init" WorkingDirectory="$(MSBuildProjectDirectory)/.." />
    <Exec Command="git submodule update" WorkingDirectory="$(MSBuildProjectDirectory)/.." />
    <Message Text="Compiling Wren VM..." Importance="high" />
    <Exec Command="make vm" WorkingDirectory="$(MSBuildProjectDirectory)/../wren" />
    <Message Text="Compiled." Importance="high" />
  </Target>

  <!-- TODO: How to package native stuff: https://github.com/NuGet/Home/issues/6645 -->
  <PropertyGroup>
    <IsLinux>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))</IsLinux>
    <IsOsx>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))</IsOsx>
    <WrenSharedLibraryPathOsx>$(MSBuildProjectDirectory)/../wren/lib/libwren.dylib</WrenSharedLibraryPathOsx>
    <WrenSharedLibraryPathLinux>$(MSBuildProjectDirectory)/../wren/lib/libwren.so</WrenSharedLibraryPathLinux>
  </PropertyGroup>
  <Target Name="CopyWrenSharedLibrary" AfterTargets="AfterBuild">
    <Copy SourceFiles="$(WrenSharedLibraryPathOsx)" DestinationFolder="$(OutDir)" Condition="$(IsOsx)" />
    <Copy SourceFiles="$(WrenSharedLibraryPathLinux)" DestinationFolder="$(OutDir)" Condition="$(IsLinux)" />
  </Target>

  <ItemGroup>
    <None Include="$(WrenSharedLibraryPathOsx)" Pack="true" PackageCopyToOutput="true" PackagePath="runtimes/osx/native" />
    <None Include="$(WrenSharedLibraryPathLinux)" Pack="true" PackageCopyToOutput="true" PackagePath="runtimes/linux-x64/native" />
    <None Include="..\assets\wren-logo.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
      <Link>wren-logo.png</Link>
    </None>
    <!-- TODO: Package for windows -->
    <!-- <file platform="windows" src="runtimes/win-x64/native/libSkiaSharp.dll" /> -->
    <!-- <file platform="windows" src="runtimes/win-x86/native/libSkiaSharp.dll" /> -->
    <!-- <file platform="windows" src="runtimes/win10-x64/nativeassets/uap10.0/libSkiaSharp.dll" /> -->
    <!-- <file platform="windows" src="runtimes/win10-x86/nativeassets/uap10.0/libSkiaSharp.dll" /> -->
    <!-- <file platform="windows" src="runtimes/win10-arm/nativeassets/uap10.0/libSkiaSharp.dll" /> -->
  </ItemGroup>

</Project>
